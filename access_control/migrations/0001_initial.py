# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2018-09-27 14:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('org_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date joined ')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date modified')),
                ('name', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=30)),
                ('currency', models.CharField(default='USD', max_length=10)),
                ('timezone', models.CharField(default='UTC', max_length=100)),
            ],
            options={
                'db_table': 'organizations',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date joined ')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date modified')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('product_description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductFeature',
            fields=[
                ('pf_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date joined ')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date modified')),
                ('feature_name', models.CharField(max_length=100)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access_control.Product')),
            ],
            options={
                'db_table': 'product_features',
            },
        ),
        migrations.CreateModel(
            name='ProductFeatureGroupMap',
            fields=[
                ('pfg_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('is_permission', models.BooleanField(default=True)),
                ('product_group_feature_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access_control.ProductFeature')),
            ],
            options={
                'db_table': 'product_feature_group_map',
            },
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('pg_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date joined ')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date modified')),
                ('group_name', models.CharField(max_length=100)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access_control.Product')),
            ],
            options={
                'db_table': 'product_group',
            },
        ),
        migrations.CreateModel(
            name='ProductOrgMap',
            fields=[
                ('po_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('org_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access_control.Organization')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access_control.Product')),
            ],
            options={
                'db_table': 'product_org_map',
            },
        ),
        migrations.CreateModel(
            name='TokenValidation',
            fields=[
                ('token_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date joined ')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date modified')),
                ('email', models.EmailField(max_length=254)),
                ('token_md5', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'token_validation',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date joined ')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date modified')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('timezone', models.CharField(default='UTC', max_length=100)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access_control.User')),
                ('organization', models.ForeignKey(db_column='organization', on_delete=django.db.models.deletion.CASCADE, to='access_control.Organization')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upd_by', to='access_control.User')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserProductGroup',
            fields=[
                ('upg_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('prod_group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access_control.ProductGroup')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access_control.Product')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access_control.User')),
            ],
            options={
                'db_table': 'userproductgroup',
            },
        ),
        migrations.AddField(
            model_name='productfeaturegroupmap',
            name='product_group_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access_control.ProductGroup'),
        ),
        migrations.AddField(
            model_name='productfeaturegroupmap',
            name='product_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='access_control.Product'),
        ),
        migrations.AlterUniqueTogether(
            name='organization',
            unique_together=set([('name', 'country')]),
        ),
        migrations.AlterUniqueTogether(
            name='userproductgroup',
            unique_together=set([('user_id', 'prod_group_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='productorgmap',
            unique_together=set([('product_id', 'org_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='productgroup',
            unique_together=set([('product_id', 'group_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='productfeaturegroupmap',
            unique_together=set([('product_group_id', 'product_group_feature_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='productfeature',
            unique_together=set([('product_id', 'feature_name')]),
        ),
    ]
